niter = 100
beta1coef <- data.frame(matrix(ncol = 2))
colnames(beta1coef) <- c("beta1_lm", "beta1_mlm")
for(i in 1:niter){
beta1coef[i,] <- one_simulation(sd_intercept = 1)
}
boxplot(beta1coef)
niter = 100
beta1coef <- data.frame(matrix(ncol = 2))
colnames(beta1coef) <- c("beta1_lm", "beta1_mlm")
for(i in 1:niter){
beta1coef[i,] <- one_simulation(sd_intercept = 0)
}
boxplot(beta1coef)
sd(beta1coef)
?sd
sd(beta1coef[,1])
sd(beta1coef[,2])
summary(mlm_model)
summary(lm_model)
coef(lm_model)
?lm
coef(lm_model)[,2]
coef(lm_model)[,1]
coef(summary(lm_model)[,2]
coef(summary(lm_model))[,2]
fixef(summary(mlm_model))[,2]
bias <- beta1coef - 1.5
View(bias)
boxplot(bias)
t.test(bias)
?t.test
t.test(bias[,1], bias[,2])
niter = 100
beta1coef <- data.frame(matrix(ncol = 2))
colnames(beta1coef) <- c("beta1_lm", "beta1_mlm")
for(i in 1:niter){
beta1coef[i,] <- one_simulation(sd_intercept = 10)
}
bias <- beta1coef - 1.5
t.test(bias[,1], bias[,2])
for(i in 1:niter){
beta1coef[i,] <- one_simulation(sd_intercept = 20)
}
bias <- beta1coef - 1.5
t.test(bias[,1], bias[,2])
for(i in 1:niter){
beta1coef[i,] <- one_simulation(sd_intercept = 0.1)
}
bias <- beta1coef - 1.5
t.test(bias[,1], bias[,2])
niter = 100
beta1coef <- data.frame(matrix(ncol = 2))
colnames(beta1coef) <- c("beta1_lm", "beta1_mlm")
for(i in 1:niter){
beta1coef[i,] <- one_simulation(sd_intercept = 10)
}
bias <- beta1coef - 1.5
t.test(bias[,1], bias[,2])
niter = 100
beta1coef <- data.frame(matrix(ncol = 2))
colnames(beta1coef) <- c("beta1_lm", "beta1_mlm")
for(i in 1:niter){
beta1coef[i,] <- one_simulation(sd_intercept = 10)
}
bias <- beta1coef - 1.5
t.test(bias[,1], bias[,2])
niter = 100
beta1coef <- data.frame(matrix(ncol = 2))
colnames(beta1coef) <- c("beta1_lm", "beta1_mlm")
for(i in 1:niter){
beta1coef[i,] <- one_simulation(sd_intercept = 10)
}
bias <- beta1coef - 1.5
t.test(bias[,1], bias[,2])
niter = 100
beta1coef <- data.frame(matrix(ncol = 2))
colnames(beta1coef) <- c("beta1_lm", "beta1_mlm")
for(i in 1:niter){
beta1coef[i,] <- one_simulation(sd_intercept = 10)
}
bias <- beta1coef - 1.5
t.test(bias[,1], bias[,2])
niter = 100
beta1coef <- data.frame(matrix(ncol = 2))
colnames(beta1coef) <- c("beta1_lm", "beta1_mlm")
for(i in 1:niter){
beta1coef[i,] <- one_simulation(sd_intercept = 10)
}
bias <- beta1coef - 1.5
t.test(bias[,1], bias[,2])
niter = 1000
beta1coef <- data.frame(matrix(ncol = 2))
colnames(beta1coef) <- c("beta1_lm", "beta1_mlm")
for(i in 1:niter){
beta1coef[i,] <- one_simulation(sd_intercept = 10)
}
bias <- beta1coef - 1.5
t.test(bias[,1], bias[,2])
View(beta1coef)
View(bias)
View(ml_data)
coef(summary(lm_model))[,2]
coef(summary(lm_model))[,2][2]
summary(mlm_model)
?lmer
?summary
?lme4
str(summary(mlm_model))
?`lmerMod-class`
summary(mlm_model)$coefficient
summary(mlm_model)$coefficient[,2]
summary(mlm_model)$coefficient[,2][2]
summary(lm_model)
one_simulation <- function(sd_intercept = 10, sd_slope = 0, corr = 0){
source("dgp_multi_ml.R")
beta1_mlm <- NA
beta1_lm <- NA
ml_data <- gen_ml_data()
mlm_model <- lmer(leistung ~ iq + math_lektionen + (1 | klasse), data = ml_data)
lm_model <- lm(leistung ~ iq + math_lektionen, data = ml_data)
beta1_lm <- coef(lm_model)[2]
SE_lm <- coef(summary(lm_model))[,2][2]
SE_mlm <- summary(mlm_model)$coefficient[,2][2]
beta1_mlm <- fixef(mlm_model)[2]
return(c(beta1_lm, SE_lm, beta1_mlm, SE_mlm))
}
niter = 1000
niter = 100
beta1coef <- data.frame(matrix(ncol = 4))
colnames(beta1coef) <- c("beta1_lm", "SE_lm","beta1_mlm", "SE_mlm")
for(i in 1:niter){
beta1coef[i,] <- one_simulation(sd_intercept = 10)
}
bias <- beta1coef - 1.5
niter = 100
coef_model <- data.frame(matrix(ncol = 4))
colnames(coef_model) <- c("beta1_lm", "SE_lm","beta1_mlm", "SE_mlm")
for(i in 1:niter){
coef_model[i,] <- one_simulation(sd_intercept = 10)
}
boxplot(beta1coef)
View(coef_model)
boxplot(coef_model[,2])
boxplot(coef_model[,2], coef_model[,4])
niter = 100
coef_model <- data.frame(matrix(ncol = 4))
colnames(coef_model) <- c("beta1_lm", "SE_lm","beta1_mlm", "SE_mlm")
for(i in 1:niter){
coef_model[i,] <- one_simulation(sd_intercept = 0)
}
boxplot(coef_model[,2], coef_model[,4])
summary(mlm_model)$coefficient[,2]
summary(mlm_model)$coefficient[,1]
summary(mlm_model)$coefficient
one_simulation <- function(sd_intercept = 10, sd_slope = 0, corr = 0){
source("dgp_multi_ml.R")
beta1_mlm <- NA
beta1_lm <- NA
ml_data <- gen_ml_data()
mlm_model <- lmer(leistung ~ iq + math_lektionen + (1 | klasse), data = ml_data)
lm_model <- lm(leistung ~ iq + math_lektionen, data = ml_data)
beta1_lm <- coef(lm_model)
SE_lm <- coef(summary(lm_model))[,2]
SE_mlm <- summary(mlm_model)$coefficient[,2]
beta1_mlm <- fixef(mlm_model)
return(c(beta1_lm, SE_lm, beta1_mlm, SE_mlm))
}
one_simulation(sd_intercept = 0)
niter = 100
coef_models <- data.frame(matrix(ncol = 12))
colnames(coef_models) <- c("intercept_lm", "beta1_lm", "beta2_lm",
"SE_intercept_lm", "SE_beta1_lm", "SE_beta2_lm",
"intercept_mlm", "beta1_mlm", "beta2_mlm",
"SE_intercept_mlm", "SE_beta1_mlm", "SE_beta2_mlm")
for(i in 1:niter){
coef_models[i,] <- one_simulation(sd_intercept = 0)
}
one_simulation <- function(sd_intercept = 10, sd_slope = 0, corr = 0){
source("dgp_multi_ml.R")
beta1_mlm <- NA
beta1_lm <- NA
ml_data <- gen_ml_data()
mlm_model <- lmer(leistung ~ iq + math_lektionen + (1 | klasse), data = ml_data)
lm_model <- lm(leistung ~ iq + math_lektionen, data = ml_data)
beta1_lm <- coef(lm_model)
SE_lm <- coef(summary(lm_model))[,2]
SE_mlm <- summary(mlm_model)$coefficient[,2]
beta1_mlm <- fixef(mlm_model)
return(c(beta1_lm, SE_lm, beta1_mlm, SE_mlm))
}
niter = 100
coef_models <- data.frame(matrix(ncol = 12))
colnames(coef_models) <- c("intercept_lm", "beta1_lm", "beta2_lm",
"SE_intercept_lm", "SE_beta1_lm", "SE_beta2_lm",
"intercept_mlm", "beta1_mlm", "beta2_mlm",
"SE_intercept_mlm", "SE_beta1_mlm", "SE_beta2_mlm")
for(i in 1:niter){
coef_models[i,] <- one_simulation(sd_intercept = 0)
}
View(coef_models)
boxplot(coef_models$SE_beta2_lm, coef_models$SE_beta2_mlm)
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- data.frame(matrix(ncol = 12))
colnames(coef_models) <- c("intercept_lm", "beta1_lm", "beta2_lm",
"SE_intercept_lm", "SE_beta1_lm", "SE_beta2_lm",
"intercept_mlm", "beta1_mlm", "beta2_mlm",
"SE_intercept_mlm", "SE_beta1_mlm", "SE_beta2_mlm")
for(i in 1:niter){
coef_models[i,] <- one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr)
}
}
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- data.frame(matrix(ncol = 12))
colnames(coef_models) <- c("intercept_lm", "beta1_lm", "beta2_lm",
"SE_intercept_lm", "SE_beta1_lm", "SE_beta2_lm",
"intercept_mlm", "beta1_mlm", "beta2_mlm",
"SE_intercept_mlm", "SE_beta1_mlm", "SE_beta2_mlm")
for(i in 1:niter){
coef_models[i,] <- one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr)
}
}
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- data.frame(matrix(ncol = 12))
colnames(coef_models) <- c("intercept_lm", "beta1_lm", "beta2_lm",
"SE_intercept_lm", "SE_beta1_lm", "SE_beta2_lm",
"intercept_mlm", "beta1_mlm", "beta2_mlm",
"SE_intercept_mlm", "SE_beta1_mlm", "SE_beta2_mlm")
for(i in 1:niter){
coef_models[i,] <- one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr)
}
return(coef_models)
}
simulation_study()
test <- simulation_study(sd_intercept = 10)
test_0 <- simulation_study(sd_intercept = 0)
View(test_0)
test_10 <- simulation_study(sd_intercept = 10)
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- data.frame(matrix(ncol = 12))
colnames(coef_models) <- c("intercept_lm", "beta1_lm", "beta2_lm",
"SE_intercept_lm", "SE_beta1_lm", "SE_beta2_lm",
"intercept_mlm", "beta1_mlm", "beta2_mlm",
"SE_intercept_mlm", "SE_beta1_mlm", "SE_beta2_mlm")
for(i in 1:niter){
coef_models[i,] <- one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr)
}
return(coef_models)
}
test_10 <- simulation_study(sd_intercept = 10)
test_0 <- simulation_study(sd_intercept = 0)
test_10$beta1_lm <- test_10$beta1_lm - 1.5
test_10$beta1_mlm <- test_10$beta1_mlm - 1.5
t.test(test_10$beta1_lm, test_10$beta1_mlm)
test_0$beta1_lm <- test_0$beta1_lm - 1.5
test_0$beta1_mlm <- test_0$beta1_mlm - 1.5
t.test(test_0$beta1_lm, test_0$beta1_mlm)
test_10 <- simulation_study(sd_intercept = 30)
test_10$beta1_lm <- test_10$beta1_lm - 1.5
test_10$beta1_mlm <- test_10$beta1_mlm - 1.5
t.test(test_10$beta1_lm, test_10$beta1_mlm)
test_10 <- simulation_study(sd_intercept = 100)
test_10$beta1_lm <- test_10$beta1_lm - 1.5
test_10$beta1_mlm <- test_10$beta1_mlm - 1.5
t.test(test_10$beta1_lm, test_10$beta1_mlm)
View(test_0)
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- data.frame(matrix(ncol = 18))
colnames(coef_models) <- c("intercept_lm", "beta1_lm", "beta2_lm",
"SE_intercept_lm", "SE_beta1_lm", "SE_beta2_lm",
"intercept_I_mlm", "beta1_I_mlm", "beta2_I_mlm",
"SE_intercept_I_mlm", "SE_beta1_I_mlm", "SE_beta2_I_mlm",
"intercept_IS_mlm", "beta1_IS_mlm", "beta2_IS_mlm",
"SE_intercept_IS_mlm", "SE_beta1_IS_mlm", "SE_beta2_IS_mlm")
for(i in 1:niter){
coef_models[i,] <- one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr)
}
return(coef_models)
}
test_10 <- simulation_study(sd_intercept = 10)
View(test_10)
boxplot(test_10$beta1_lm,test_10$beta1_I_mlm, test_10$beta1_IS_mlm)
anova(test_10$beta1_lm,test_10$beta1_I_mlm, test_10$beta1_IS_mlm)
aov(test_10$beta1_lm,test_10$beta1_I_mlm, test_10$beta1_IS_mlm)
?anova
?aov
boxplot(test_10$beta1_lm,test_10$beta1_I_mlm, test_10$beta1_IS_mlm)
plot(test_10$beta1_lm,test_10$beta1_I_mlm, test_10$beta1_IS_mlm)
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- data.frame(matrix(ncol = 7,))
colnames(coef_models) <- c("beta_0", "beta_1", "beta_2",
"SE_beta_0", "SE_beta_1", "SE_beta_2",
"method")
for(i in 1:niter){
coef_models[i,] <- one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr)
}
return(coef_models)
}
test_10 <- simulation_study(sd_intercept = 10)
View(test_10)
one_simulation <- function(sd_intercept = 10, sd_slope = 0, corr = 0){
source("dgp_multi_ml.R")
beta1_mlm <- NA
beta1_lm <- NA
ml_data <- gen_ml_data(sd_intercept = sd_intercept, sd_slope = sd_slope, corr = corr)
mlm_IS_model <- lmer(leistung ~ iq + math_lektionen + (iq | klasse), data = ml_data)
mlm_I_model <- lmer(leistung ~ iq + math_lektionen + (1 | klasse), data = ml_data)
lm_model <- lm(leistung ~ iq + math_lektionen, data = ml_data)
beta_lm <- coef(lm_model)
SE_lm <- coef(summary(lm_model))[,2]
SE_I_mlm <- summary(mlm_I_model)$coefficient[,2]
beta_I_mlm <- fixef(mlm_I_model)
SE_IS_mlm <- summary(mlm_IS_model)$coefficient[,2]
beta_IS_mlm <- fixef(mlm_IS_model)
return(c(beta_lm, SE_lm, "lm", beta_I_mlm, SE_I_mlm, "rim", beta_IS_mlm, SE_IS_mlm, "rism"))
}
one_simulation(
)
a <- one_simulation()
a[7]
a[14]
a <- data.frame(one_simulation())
View(a)
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- data.frame(matrix(ncol = 7))
colnames(coef_models) <- c("beta_0", "beta_1", "beta_2",
"SE_beta_0", "SE_beta_1", "SE_beta_2",
"method")
for(i in 1:niter){
coef_models[i,] <- one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr)
}
return(coef_models)
}
test_10 <- simulation_study(sd_intercept = 10)
View(test_10)
a <- data.frame(one_simulation())
View(a)
matrix(one_simulation())
matrix(one_simulation(), ncol = 7)
matrix(one_simulation(), ncol = 7)
a <- data.frame(matrix(one_simulation(), ncol = 7))
View(a)
one_simulation <- function(sd_intercept = 10, sd_slope = 0, corr = 0){
source("dgp_multi_ml.R")
beta1_mlm <- NA
beta1_lm <- NA
ml_data <- gen_ml_data(sd_intercept = sd_intercept, sd_slope = sd_slope, corr = corr)
mlm_IS_model <- lmer(leistung ~ iq + math_lektionen + (iq | klasse), data = ml_data)
mlm_I_model <- lmer(leistung ~ iq + math_lektionen + (1 | klasse), data = ml_data)
lm_model <- lm(leistung ~ iq + math_lektionen, data = ml_data)
beta_lm <- coef(lm_model)
SE_lm <- coef(summary(lm_model))[,2]
SE_I_mlm <- summary(mlm_I_model)$coefficient[,2]
beta_I_mlm <- fixef(mlm_I_model)
SE_IS_mlm <- summary(mlm_IS_model)$coefficient[,2]
beta_IS_mlm <- fixef(mlm_IS_model)
return(c(beta_lm, SE_lm, "lm", beta_I_mlm, SE_I_mlm, "rim", beta_IS_mlm, SE_IS_mlm, "rism"))
}
one_simulation()
matrix(one_simulation(), ncol = 7)
?matrix
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- data.frame(matrix(ncol = 7, byrow = TRUE))
colnames(coef_models) <- c("beta_0", "beta_1", "beta_2",
"SE_beta_0", "SE_beta_1", "SE_beta_2",
"method")
for(i in 1:niter){
coef_models[i,] <- one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr)
}
return(coef_models)
}
test_10 <- simulation_study(sd_intercept = 10)
View(test_10)
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- NA
colnames(coef_models) <- c("beta_0", "beta_1", "beta_2",
"SE_beta_0", "SE_beta_1", "SE_beta_2",
"method")
for(i in 1:niter){
coef_models[i,] <- data.frame(matrix(one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr),
nrow = 7, byrow = TRUE))
}
return(coef_models)
}
test_10 <- simulation_study(sd_intercept = 10)
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- NA
for(i in 1:niter){
coef_models[i,] <- data.frame(matrix(one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr),
nrow = 7, byrow = TRUE))
}
colnames(coef_models) <- c("beta_0", "beta_1", "beta_2",
"SE_beta_0", "SE_beta_1", "SE_beta_2",
"method")
return(coef_models)
}
test_10 <- simulation_study(sd_intercept = 10)
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- NA
for(i in 1:niter){
coef_models <- rbind(coef_models, data.frame(matrix(one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr),
nrow = 7, byrow = TRUE)))
}
colnames(coef_models) <- c("beta_0", "beta_1", "beta_2",
"SE_beta_0", "SE_beta_1", "SE_beta_2",
"method")
return(coef_models)
}
test_10 <- simulation_study(sd_intercept = 10)
one_simulation <- function(sd_intercept = 10, sd_slope = 0, corr = 0){
source("dgp_multi_ml.R")
beta1_mlm <- NA
beta1_lm <- NA
ml_data <- gen_ml_data(sd_intercept = sd_intercept, sd_slope = sd_slope, corr = corr)
mlm_IS_model <- lmer(leistung ~ iq + math_lektionen + (iq | klasse), data = ml_data)
mlm_I_model <- lmer(leistung ~ iq + math_lektionen + (1 | klasse), data = ml_data)
lm_model <- lm(leistung ~ iq + math_lektionen, data = ml_data)
beta_lm <- coef(lm_model)
SE_lm <- coef(summary(lm_model))[,2]
SE_I_mlm <- summary(mlm_I_model)$coefficient[,2]
beta_I_mlm <- fixef(mlm_I_model)
SE_IS_mlm <- summary(mlm_IS_model)$coefficient[,2]
beta_IS_mlm <- fixef(mlm_IS_model)
coefs <- matrix(c(beta_lm, SE_lm, "lm", beta_I_mlm, SE_I_mlm, "rim", beta_IS_mlm, SE_IS_mlm, "rism"),
ncol = 7, byrow = TRUE)
return(coefs)
}
one_simulation()
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- NA
for(i in 1:niter){
coef_models <- rbind(coef_models, one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr))
}
colnames(coef_models) <- c("beta_0", "beta_1", "beta_2",
"SE_beta_0", "SE_beta_1", "SE_beta_2",
"method")
return(coef_models)
}
test_10 <- simulation_study(sd_intercept = 10)
View(test_10)
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- data.frame(matrix(ncol = 7))
for(i in 1:niter){
coef_models <- rbind(coef_models, one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr))
}
colnames(coef_models) <- c("beta_0", "beta_1", "beta_2",
"SE_beta_0", "SE_beta_1", "SE_beta_2",
"method")
return(coef_models)
}
test_10 <- simulation_study(sd_intercept = 10)
coef_models <- data.frame()
for(i in 1:niter){
coef_models <- rbind(coef_models, one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr))
}
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- data.frame()
for(i in 1:niter){
coef_models <- rbind(coef_models, one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr))
}
colnames(coef_models) <- c("beta_0", "beta_1", "beta_2",
"SE_beta_0", "SE_beta_1", "SE_beta_2",
"method")
return(coef_models)
}
test_10 <- simulation_study(sd_intercept = 10)
View(test_10)
boxplot(beta_1 ~ method, data = test_10)
simulation_study <- function(niter = 100, sd_intercept = 10, sd_slope = 0, corr = 0){
source("one_simulation_ml.R")
coef_models <- data.frame()
for(i in 1:niter){
coef_models <- rbind(coef_models, one_simulation(sd_intercept = sd_intercept,
sd_slope = sd_slope, corr = corr))
}
colnames(coef_models) <- c("beta_0", "beta_1", "beta_2",
"SE_beta_0", "SE_beta_1", "SE_beta_2",
"method")
coef_models$method <- as.factor(coef_models$method)
return(coef_models)
}
test_10 <- simulation_study(sd_intercept = 10)
boxplot(beta_1 ~ method, data = test_10)
